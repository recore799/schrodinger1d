(undo-tree-save-format-version . 1)
"6212f3466d8f752ef99c5ec31749ef265dd5b16c"
[nil nil nil nil (26634 55855 79823 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 1986 . 1987) (nil fontified nil 1 . 1987) (1 . 1987) (t 26634 55855 83252 939000)) nil (26634 56023 453037 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 240 . 241) (nil fontified nil 52 . 241) (52 . 241)) nil (26634 56023 453036 0) 0 nil])
([nil nil ((2176 . 2177) 2126) nil (26634 56023 453033 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . -250) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (239 . 251) (t 26634 56023 455223 927000)) nil (26634 56050 961840 0) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-comment-delimiter-face fontified nil)) . -1407) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (1406 . 1408) (t 26634 56050 963882 826000)) nil (26634 56089 220609 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . -1407) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (1405 . 1408)) nil (26634 56089 220606 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1406) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (t 26634 56089 222604 437000)) nil (26634 56099 238244 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1406) (undo-tree-id30 . 1) (undo-tree-id31 . -1) (undo-tree-id32 . -1)) nil (26634 56204 303801 0) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1406) (undo-tree-id107 . 1)) ((1406 . 1407)) (26634 56205 80307 0) 0 nil])
([nil nil ((apply -2 764 838 undo--wrap-and-run-primitive-undo 764 838 ((768 . 770) 785))) nil (26634 56231 529863 0) 0 nil] [nil nil ((#("psi_offset," 0 11 (fontified t)) . 1476) (undo-tree-id41 . -10) (undo-tree-id42 . -10) (undo-tree-id43 . -10) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (undo-tree-id70 . -5) (undo-tree-id71 . -5) (undo-tree-id72 . -5) (undo-tree-id73 . -5) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (undo-tree-id80 . -7) (undo-tree-id81 . -7) (undo-tree-id82 . -7) (undo-tree-id83 . -7) (undo-tree-id84 . -7) (undo-tree-id85 . -7) (undo-tree-id86 . -8) (undo-tree-id87 . -8) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -9) (undo-tree-id93 . -9) (undo-tree-id94 . -9) (undo-tree-id95 . -9) (undo-tree-id96 . -9) (undo-tree-id97 . -9) (undo-tree-id98 . -10) (undo-tree-id99 . -10) (undo-tree-id100 . -10) (undo-tree-id101 . -10) (undo-tree-id102 . -10) (undo-tree-id103 . -10) (undo-tree-id104 . -10) (undo-tree-id105 . -10) (undo-tree-id106 . -11) 1486 (t 26634 56099 240446 479000)) ((1476 . 1487)) (26634 56203 834621 0) 0 nil])
([nil nil ((#("def plot_hydrogen_radial_wavefunctions(states, rmax=30.0, mesh=1421):
    \"\"\"
    Plot hydrogen atom radial wavefunctions for given (n,l) states.
    
    Args:
        states (list of tuples): [(n1,l1), (n2,l2), ...] quantum numbers
        rmax (float): Maximum radial distance
        mesh (int): Number of grid points
    \"\"\"
    plt.figure(figsize=(12, 8))
    
    # Plot Coulomb potential (-1/r)
    r = np.linspace(0, rmax, 1000)
    v_coulomb = -1/r
    v_coulomb[0] = -100  # Handle divergence at r=0
    # plt.plot(r, v_coulomb, 'k-', linewidth=2, label=\"V(r) = -1/r\")
    
    # Plot each state
    for n, l in states:
        # Solve for this state
        e, iterations, psi_r = solve_atom(n=n, l=l, rmax=rmax, mesh=mesh)
        
        # Get the radial mesh (assuming solve_atom uses log grid)
        x, r, dx = init_mesh(rmax, mesh, Z=1)
        psi_radial = psi_r * r  # Convert ψ(r) to R(r) = ψ(r)/r
        
        # Normalize properly (since solve_atom may not normalize R(r))
        norm = np.sqrt(np.trapz(psi_radial**2, x=r))
        psi_radial /= norm
        
        # Offset by energy (E_n = -1/(2n²))
        psi_offset = psi_radial + e
        
        # Plot with label
        plt.plot(r, psi_offset, 
                 linewidth=1.5, 
                 label=f\"n={n}, l={l}, E={e:.4f}\")
        
        # Add horizontal line at energy level
        plt.axhline(e, color='gray', linestyle=':', alpha=0.3)
    
    # Styling
    plt.title(\"Hydrogen Atom Radial Wavefunctions\", fontsize=14)
    plt.xlabel(\"Radial distance (r)\", fontsize=12)
    plt.ylabel(\"Energy (Eₙ) + Rₙ(r)\", fontsize=12)
    plt.ylim(-1.2, 0.5)
    plt.xlim(0, rmax)
    plt.legend(fontsize=10, loc='upper right')
    plt.grid(alpha=0.3)
    plt.tight_layout()
    plt.show()

# Example usage: Plot some low-lying states
states_to_plot = [(1,0), (2,0), (2,1), (3,0), (3,1), (3,2)]
plot_hydrogen_radial_wavefunctions(states_to_plot)
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 38 (face font-lock-function-name-face fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 51 (fontified t) 51 52 (face font-lock-operator-face fontified t) 52 62 (fontified t) 62 63 (face font-lock-operator-face fontified t) 63 67 (fontified t) 67 68 (face (rainbow-delimiters-depth-1-face) fontified t) 68 74 (fontified t) 74 76 (face font-lock-doc-face fontified t) 76 77 (face font-lock-doc-face fontified t syntax-table (15)) 77 326 (face font-lock-doc-face fontified t) 326 327 (face font-lock-doc-face fontified t syntax-table (15)) 327 329 (face font-lock-doc-face fontified t) 329 344 (fontified t) 344 345 (face (rainbow-delimiters-depth-1-face) fontified t) 345 352 (fontified t) 352 353 (face font-lock-operator-face fontified t) 353 354 (face (rainbow-delimiters-depth-2-face) fontified t) 354 359 (fontified t) 359 360 (face (rainbow-delimiters-depth-2-face) fontified t) 360 361 (face (rainbow-delimiters-depth-1-face) fontified t) 361 371 (fontified t) 371 373 (face font-lock-comment-delimiter-face fontified t) 373 403 (face font-lock-comment-face fontified t) 403 407 (fontified t) 407 408 (face font-lock-variable-name-face fontified t) 408 409 (fontified t) 409 410 (face font-lock-operator-face fontified t) 410 422 (fontified t) 422 423 (face (rainbow-delimiters-depth-1-face) fontified t) 423 436 (fontified t) 436 437 (face (rainbow-delimiters-depth-1-face) fontified t) 437 442 (fontified t) 442 451 (face font-lock-variable-name-face fontified t) 451 452 (fontified t) 452 453 (face font-lock-operator-face fontified t) 453 454 (fontified t) 454 455 (face font-lock-operator-face fontified t) 455 456 (fontified t) 456 457 (face font-lock-operator-face fontified t) 457 463 (fontified t) 463 472 (face font-lock-variable-name-face fontified t) 472 473 (face (rainbow-delimiters-depth-1-face) fontified t) 473 474 (fontified t) 474 475 (face (rainbow-delimiters-depth-1-face) fontified t) 475 476 (fontified t) 476 477 (face font-lock-operator-face fontified t) 477 478 (fontified t) 478 479 (face font-lock-operator-face fontified t) 479 484 (fontified t) 484 486 (face font-lock-comment-delimiter-face fontified t) 486 511 (face font-lock-comment-face fontified t) 511 515 (fontified t) 515 517 (face font-lock-comment-delimiter-face fontified t) 517 525 (face font-lock-comment-face fontified t) 525 526 (face font-lock-comment-face fontified t) 526 540 (face font-lock-comment-face fontified t) 540 544 (face font-lock-comment-face fontified t) 544 555 (face font-lock-comment-face fontified t) 555 556 (face font-lock-comment-face fontified t) 556 564 (face font-lock-comment-face fontified t) 564 565 (face font-lock-comment-face fontified t) 565 578 (face font-lock-comment-face fontified t) 578 579 (face font-lock-comment-face fontified t) 579 580 (face font-lock-comment-face fontified t) 580 589 (fontified t) 589 591 (face font-lock-comment-delimiter-face fontified t) 591 607 (face font-lock-comment-face fontified t) 607 611 (fontified t) 611 614 (face font-lock-keyword-face fontified t) 614 620 (fontified t) 620 622 (face font-lock-keyword-face fontified t) 622 639 (fontified t) 639 641 (face font-lock-comment-delimiter-face fontified t) 641 662 (face font-lock-comment-face fontified t) 662 670 (fontified t) 670 671 (face font-lock-variable-name-face fontified t) 671 673 (fontified t) 673 683 (face font-lock-variable-name-face fontified t) 683 685 (fontified t) 685 690 (face font-lock-variable-name-face fontified t) 690 691 (fontified t) 691 692 (face font-lock-operator-face fontified t) 692 703 (fontified t) 703 704 (face (rainbow-delimiters-depth-1-face) fontified t) 704 705 (fontified t) 705 706 (face font-lock-operator-face fontified t) 706 710 (fontified t) 710 711 (face font-lock-operator-face fontified t) 711 718 (fontified t) 718 719 (face font-lock-operator-face fontified t) 719 729 (fontified t) 729 730 (face font-lock-operator-face fontified t) 730 734 (fontified t) 734 735 (face (rainbow-delimiters-depth-1-face) fontified t) 735 753 (fontified t) 753 755 (face font-lock-comment-delimiter-face fontified t) 755 811 (face font-lock-comment-face fontified t) 811 819 (fontified t) 819 820 (face font-lock-variable-name-face fontified t) 820 822 (fontified t) 822 823 (face font-lock-variable-name-face fontified t) 823 825 (fontified t) 825 827 (face font-lock-variable-name-face fontified t) 827 828 (fontified t) 828 829 (face font-lock-operator-face fontified t) 829 839 (fontified t) 839 840 (face (rainbow-delimiters-depth-1-face) fontified t) 840 853 (fontified t) 853 854 (face font-lock-operator-face fontified t) 854 855 (fontified t) 855 856 (face (rainbow-delimiters-depth-1-face) fontified t) 856 865 (fontified t) 865 875 (face font-lock-variable-name-face fontified t) 875 876 (fontified t) 876 877 (face font-lock-operator-face fontified t) 877 884 (fontified t) 884 885 (face font-lock-operator-face fontified t) 885 889 (fontified t) 889 891 (face font-lock-comment-delimiter-face fontified t) 891 921 (face font-lock-comment-face fontified t) 921 938 (fontified t) 938 940 (face font-lock-comment-delimiter-face fontified t) 940 1001 (face font-lock-comment-face fontified t) 1001 1009 (fontified t) 1009 1013 (face font-lock-variable-name-face fontified t) 1013 1014 (fontified t) 1014 1015 (face font-lock-operator-face fontified t) 1015 1023 (fontified t) 1023 1024 (face (rainbow-delimiters-depth-1-face) fontified t) 1024 1032 (fontified t) 1032 1033 (face (rainbow-delimiters-depth-2-face) fontified t) 1033 1043 (fontified t) 1043 1045 (face font-lock-operator-face fontified t) 1045 1049 (fontified t) 1049 1050 (face font-lock-operator-face fontified t) 1050 1051 (fontified t) 1051 1052 (face (rainbow-delimiters-depth-2-face) fontified t) 1052 1053 (face (rainbow-delimiters-depth-1-face) fontified t) 1053 1062 (fontified t) 1062 1072 (face font-lock-variable-name-face fontified t) 1072 1073 (fontified t) 1073 1075 (face font-lock-operator-face fontified t) 1075 1098 (fontified t) 1098 1100 (face font-lock-comment-delimiter-face fontified t) 1100 1134 (face font-lock-comment-face fontified t) 1134 1142 (fontified t) 1142 1152 (face font-lock-variable-name-face fontified t) 1152 1153 (fontified t) 1153 1154 (face font-lock-operator-face fontified t) 1154 1155 (fontified t) 1155 1165 (fontified t) 1165 1166 (fontified t) 1166 1167 (face font-lock-operator-face fontified t) 1167 1168 (fontified t) 1168 1169 (fontified t) 1169 1170 (fontified t) 1170 1187 (fontified t) 1187 1189 (face font-lock-comment-delimiter-face fontified t) 1189 1205 (face font-lock-comment-face fontified t) 1205 1221 (fontified t) 1221 1222 (face (rainbow-delimiters-depth-1-face) fontified t) 1222 1225 (fontified t) 1225 1236 (fontified t) 1236 1238 (fontified t) 1238 1264 (fontified t) 1264 1265 (face font-lock-operator-face fontified t) 1265 1293 (fontified t) 1293 1294 (face font-lock-operator-face fontified t) 1294 1295 (fontified t) 1295 1298 (face font-lock-string-face fontified t) 1298 1301 (face nil fontified t) 1301 1305 (face font-lock-string-face fontified t) 1305 1308 (face nil fontified t) 1308 1312 (face font-lock-string-face fontified t) 1312 1319 (face nil fontified t) 1319 1320 (face font-lock-string-face fontified t) 1320 1321 (face (rainbow-delimiters-depth-1-face) fontified t) 1321 1339 (fontified t) 1339 1341 (face font-lock-comment-delimiter-face fontified t) 1341 1377 (face font-lock-comment-face fontified t) 1377 1396 (fontified t) 1396 1397 (face (rainbow-delimiters-depth-1-face) fontified t) 1397 1405 (fontified t) 1405 1406 (face font-lock-operator-face fontified t) 1406 1412 (face font-lock-string-face fontified t) 1412 1423 (fontified t) 1423 1424 (face font-lock-operator-face fontified t) 1424 1427 (face font-lock-string-face fontified t) 1427 1434 (fontified t) 1434 1435 (face font-lock-operator-face fontified t) 1435 1438 (fontified t) 1438 1439 (face (rainbow-delimiters-depth-1-face) fontified t) 1439 1449 (fontified t) 1449 1450 (face font-lock-comment-delimiter-face fontified t) 1450 1451 (face font-lock-comment-delimiter-face fontified t) 1451 1459 (face font-lock-comment-face fontified t) 1459 1472 (fontified t) 1472 1473 (face (rainbow-delimiters-depth-1-face) fontified t) 1473 1500 (face font-lock-string-face fontified t) 1500 1502 (face font-lock-string-face fontified t) 1502 1509 (face font-lock-string-face fontified t) 1509 1519 (fontified t) 1519 1520 (face font-lock-operator-face fontified t) 1520 1522 (fontified t) 1522 1523 (face (rainbow-delimiters-depth-1-face) fontified t) 1523 1524 (fontified t) 1524 1538 (fontified t) 1538 1539 (face (rainbow-delimiters-depth-1-face) fontified t) 1539 1560 (face font-lock-string-face fontified t) 1560 1570 (fontified t) 1570 1571 (face font-lock-operator-face fontified t) 1571 1573 (fontified t) 1573 1574 (face (rainbow-delimiters-depth-1-face) fontified t) 1574 1589 (fontified t) 1589 1590 (face (rainbow-delimiters-depth-1-face) fontified t) 1590 1611 (face font-lock-string-face fontified t) 1611 1621 (fontified t) 1621 1622 (face font-lock-operator-face fontified t) 1622 1624 (fontified t) 1624 1625 (face (rainbow-delimiters-depth-1-face) fontified t) 1625 1638 (fontified t) 1638 1639 (face (rainbow-delimiters-depth-1-face) fontified t) 1639 1640 (face font-lock-operator-face fontified t) 1640 1648 (fontified t) 1648 1649 (face (rainbow-delimiters-depth-1-face) fontified t) 1649 1662 (fontified t) 1662 1663 (face (rainbow-delimiters-depth-1-face) fontified t) 1663 1670 (fontified t) 1670 1671 (face (rainbow-delimiters-depth-1-face) fontified t) 1671 1686 (fontified t) 1686 1687 (face (rainbow-delimiters-depth-1-face) fontified t) 1687 1695 (fontified t) 1695 1696 (face font-lock-operator-face fontified t) 1696 1703 (fontified t) 1703 1704 (face font-lock-operator-face fontified t) 1704 1717 (face font-lock-string-face fontified t) 1717 1718 (face (rainbow-delimiters-depth-1-face) fontified t) 1718 1731 (fontified t) 1731 1732 (face (rainbow-delimiters-depth-1-face) fontified t) 1732 1737 (fontified t) 1737 1738 (face font-lock-operator-face fontified t) 1738 1741 (fontified t) 1741 1742 (face (rainbow-delimiters-depth-1-face) fontified t) 1742 1763 (fontified t) 1763 1764 (face (rainbow-delimiters-depth-1-face) fontified t) 1764 1765 (face (rainbow-delimiters-depth-1-face) fontified t) 1765 1778 (fontified t) 1778 1779 (face (rainbow-delimiters-depth-1-face) fontified t) 1779 1780 (face (rainbow-delimiters-depth-1-face) fontified t) 1780 1782 (fontified t) 1782 1784 (face font-lock-comment-delimiter-face fontified t) 1784 1826 (face font-lock-comment-face fontified t) 1826 1840 (face font-lock-variable-name-face fontified t) 1840 1841 (fontified t) 1841 1842 (face font-lock-operator-face fontified t) 1842 1843 (fontified t) 1843 1844 (face (rainbow-delimiters-depth-1-face) fontified t) 1844 1845 (face (rainbow-delimiters-depth-2-face) fontified t) 1845 1848 (fontified t) 1848 1849 (face (rainbow-delimiters-depth-2-face) fontified t) 1849 1851 (fontified t) 1851 1852 (face (rainbow-delimiters-depth-2-face) fontified t) 1852 1855 (fontified t) 1855 1856 (face (rainbow-delimiters-depth-2-face) fontified t) 1856 1858 (fontified t) 1858 1859 (face (rainbow-delimiters-depth-2-face) fontified t) 1859 1862 (fontified t) 1862 1863 (face (rainbow-delimiters-depth-2-face) fontified t) 1863 1865 (fontified t) 1865 1866 (face (rainbow-delimiters-depth-2-face) fontified t) 1866 1869 (fontified t) 1869 1870 (face (rainbow-delimiters-depth-2-face) fontified t) 1870 1872 (fontified t) 1872 1873 (face (rainbow-delimiters-depth-2-face) fontified t) 1873 1876 (fontified t) 1876 1877 (face (rainbow-delimiters-depth-2-face) fontified t) 1877 1879 (fontified t) 1879 1880 (face (rainbow-delimiters-depth-2-face) fontified t) 1880 1883 (fontified t) 1883 1884 (face (rainbow-delimiters-depth-2-face) fontified t) 1884 1885 (face (rainbow-delimiters-depth-1-face) fontified t) 1885 1886 (fontified t) 1886 1920 (fontified t) 1920 1921 (face (rainbow-delimiters-depth-1-face) fontified t) 1921 1935 (fontified t) 1935 1936 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 1936 1937 (fontified t)) . 253) (undo-tree-id547 . -1937) (undo-tree-id548 . -1936) (undo-tree-id549 . -1935) (undo-tree-id550 . 768) (undo-tree-id551 . -1937) (undo-tree-id552 . -1225) (undo-tree-id553 . -1225) (undo-tree-id554 . -1237) (undo-tree-id555 . -1225) (undo-tree-id556 . -1225) (undo-tree-id557 . -533) (undo-tree-id558 . -1193) (undo-tree-id559 . -70) (undo-tree-id560 . -70) (undo-tree-id561 . -70) (undo-tree-id562 . -70) (undo-tree-id563 . -70) (undo-tree-id564 . -78) (undo-tree-id565 . -78) (undo-tree-id566 . -78) (undo-tree-id567 . -78) (undo-tree-id568 . -78) (undo-tree-id569 . -70) (undo-tree-id570 . -70) (undo-tree-id571 . -70) (undo-tree-id572 . -70) (undo-tree-id573 . -70) (undo-tree-id574 . -1168) (undo-tree-id575 . -1937) (t 26634 56233 113830 94000)) nil (26634 56364 583123 0) 0 nil] [nil nil ((#("j" 0 1 (fontified nil)) . -1418) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (1418 . 1419) (#(" " 0 1 (fontified t)) . -1418) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -1419) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#(" " 0 1 (fontified t)) . -1420) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("e" 0 1 (fontified t)) . -1421) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) 1422 (t 26634 56209 227800 68000)) ((1418 . 1422) (#("j" 0 1 (fontified nil)) . 1418) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (1418 . 1419) (t 26634 56222 339133 419000)) (26634 56222 336971 0) 0 nil])
([nil nil ((apply -2 764 838 undo--wrap-and-run-primitive-undo 764 838 ((768 . 770) 784))) ((apply 2 764 836 undo--wrap-and-run-primitive-undo 764 836 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 768) 1478 (t 26634 56197 174430 450000)))) (26634 56197 172263 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2221 . 2222) (nil fontified nil 253 . 2222) (253 . 2222)) nil (26634 56364 583115 0) 0 nil])
nil
nil
([nil nil ((#("        R_r_normalized = R_r / norm
" 0 8 (fontified t) 8 22 (face font-lock-variable-name-face fontified t) 22 23 (fontified t) 23 24 (face font-lock-operator-face fontified t) 24 29 (fontified t) 29 30 (face font-lock-operator-face fontified t) 30 36 (fontified t)) . 1372) (undo-tree-id519 . -35) (undo-tree-id520 . -34) (undo-tree-id521 . -34) (undo-tree-id522 . -34) (undo-tree-id523 . -34) (undo-tree-id524 . -34) (undo-tree-id525 . -34) (undo-tree-id526 . -34) (undo-tree-id527 . -34) (undo-tree-id528 . -34) (undo-tree-id529 . -34) (undo-tree-id530 . -34) (undo-tree-id531 . -34) (undo-tree-id532 . -34) (undo-tree-id533 . -34) (undo-tree-id534 . -34) (undo-tree-id535 . -34) (undo-tree-id536 . -34) (undo-tree-id537 . -34) (undo-tree-id538 . -34) (undo-tree-id539 . -34) (undo-tree-id540 . -34) (undo-tree-id541 . -34) (undo-tree-id542 . -34) (undo-tree-id543 . -34) (undo-tree-id544 . -34) (undo-tree-id545 . -34) (undo-tree-id546 . -36) 1406) nil (26634 56364 583114 0) 0 nil])
([nil nil ((#("        norm = np.sqrt(np.trapz(R_r**2 * r**2, r))  # ∫|R(r)|²r²dr = 1
" 0 8 (fontified t) 8 12 (face font-lock-variable-name-face fontified t) 12 13 (fontified t) 13 14 (face font-lock-operator-face fontified t) 14 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t) 32 35 (fontified t) 35 37 (face font-lock-operator-face fontified t) 37 39 (fontified t) 39 40 (face font-lock-operator-face fontified t) 40 42 (fontified t) 42 44 (face font-lock-operator-face fontified t) 44 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 52 (fontified t) 52 54 (face font-lock-comment-delimiter-face fontified t) 54 71 (face font-lock-comment-face fontified t)) . 1301) (undo-tree-id466 . -70) (undo-tree-id467 . -71) (undo-tree-id468 . -71) (undo-tree-id469 . -71) (undo-tree-id470 . -71) (undo-tree-id471 . -71) (undo-tree-id472 . -71) (undo-tree-id473 . -49) (undo-tree-id474 . -49) (undo-tree-id475 . -49) (undo-tree-id476 . -49) (undo-tree-id477 . -49) (undo-tree-id478 . -49) (undo-tree-id479 . -49) (undo-tree-id480 . -49) (undo-tree-id481 . -49) (undo-tree-id482 . -49) (undo-tree-id483 . -49) (undo-tree-id484 . -71) (undo-tree-id485 . -71) (undo-tree-id486 . -71) (undo-tree-id487 . -71) (undo-tree-id488 . -71) (undo-tree-id489 . -71) (undo-tree-id490 . -71) (undo-tree-id491 . -71) (undo-tree-id492 . -71) (undo-tree-id493 . -71) (undo-tree-id494 . -71) (undo-tree-id495 . -71) (undo-tree-id496 . -71) (undo-tree-id497 . -71) (undo-tree-id498 . -71) (undo-tree-id499 . -71) (undo-tree-id500 . -71) (undo-tree-id501 . -71) (undo-tree-id502 . -71) (undo-tree-id503 . -7) (undo-tree-id504 . -7) (undo-tree-id505 . -7) (undo-tree-id506 . -7) (undo-tree-id507 . -7) (undo-tree-id508 . -7) (undo-tree-id509 . -7) (undo-tree-id510 . -7) (undo-tree-id511 . -7) (undo-tree-id512 . -7) (undo-tree-id513 . -7) (undo-tree-id514 . -7) (undo-tree-id515 . -7) (undo-tree-id516 . -7) (undo-tree-id517 . -7) (undo-tree-id518 . -71) 1308) nil (26634 56364 583107 0) 0 nil])
([nil nil ((#("        # Normalize R(r) properly
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 34 (face font-lock-comment-face fontified t)) . 1267) (undo-tree-id399 . -33) (undo-tree-id400 . -34) (undo-tree-id401 . -34) (undo-tree-id402 . -34) (undo-tree-id403 . -34) (undo-tree-id404 . -34) (undo-tree-id405 . -34) (undo-tree-id406 . -34) (undo-tree-id407 . -34) (undo-tree-id408 . -34) (undo-tree-id409 . -34) (undo-tree-id410 . -34) (undo-tree-id411 . -34) (undo-tree-id412 . -34) (undo-tree-id413 . -34) (undo-tree-id414 . -34) (undo-tree-id415 . -34) (undo-tree-id416 . -34) (undo-tree-id417 . -34) (undo-tree-id418 . -34) (undo-tree-id419 . -34) (undo-tree-id420 . -34) (undo-tree-id421 . -34) (undo-tree-id422 . -34) (undo-tree-id423 . -34) (undo-tree-id424 . -34) (undo-tree-id425 . -34) (undo-tree-id426 . -34) (undo-tree-id427 . -34) (undo-tree-id428 . -34) (undo-tree-id429 . -34) (undo-tree-id430 . -34) (undo-tree-id431 . -34) (undo-tree-id432 . -34) (undo-tree-id433 . -34) (undo-tree-id434 . -34) (undo-tree-id435 . -34) (undo-tree-id436 . -34) (undo-tree-id437 . -34) (undo-tree-id438 . -34) (undo-tree-id439 . -34) (undo-tree-id440 . -34) (undo-tree-id441 . -34) (undo-tree-id442 . -34) (undo-tree-id443 . -34) (undo-tree-id444 . -34) (undo-tree-id445 . -34) (undo-tree-id446 . -34) (undo-tree-id447 . -34) (undo-tree-id448 . -34) (undo-tree-id449 . -34) (undo-tree-id450 . -7) (undo-tree-id451 . -7) (undo-tree-id452 . -7) (undo-tree-id453 . -7) (undo-tree-id454 . -7) (undo-tree-id455 . -7) (undo-tree-id456 . -7) (undo-tree-id457 . -7) (undo-tree-id458 . -7) (undo-tree-id459 . -7) (undo-tree-id460 . -7) (undo-tree-id461 . -7) (undo-tree-id462 . -7) (undo-tree-id463 . -7) (undo-tree-id464 . -7) (undo-tree-id465 . -34) 1274) nil (26634 56364 583094 0) 0 nil])
([nil nil ((#("_normalized" 0 11 (fontified t)) . 1409) (undo-tree-id211 . -10) (undo-tree-id212 . -10) (undo-tree-id213 . -10) (undo-tree-id214 . -3) (undo-tree-id215 . -3) (undo-tree-id216 . -3) (undo-tree-id217 . -3) (undo-tree-id218 . -3) (undo-tree-id219 . -3) (undo-tree-id220 . -3) (undo-tree-id221 . -3) (undo-tree-id222 . -3) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (undo-tree-id232 . -3) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -5) (undo-tree-id258 . -5) (undo-tree-id259 . -5) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -5) (undo-tree-id263 . -5) (undo-tree-id264 . -5) (undo-tree-id265 . -5) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -5) (undo-tree-id272 . -5) (undo-tree-id273 . -5) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -5) (undo-tree-id280 . -5) (undo-tree-id281 . -6) (undo-tree-id282 . -6) (undo-tree-id283 . -6) (undo-tree-id284 . -6) (undo-tree-id285 . -6) (undo-tree-id286 . -6) (undo-tree-id287 . -6) (undo-tree-id288 . -6) (undo-tree-id289 . -6) (undo-tree-id290 . -6) (undo-tree-id291 . -6) (undo-tree-id292 . -6) (undo-tree-id293 . -6) (undo-tree-id294 . -6) (undo-tree-id295 . -6) (undo-tree-id296 . -6) (undo-tree-id297 . -6) (undo-tree-id298 . -6) (undo-tree-id299 . -6) (undo-tree-id300 . -6) (undo-tree-id301 . -6) (undo-tree-id302 . -6) (undo-tree-id303 . -6) (undo-tree-id304 . -6) (undo-tree-id305 . -7) (undo-tree-id306 . -7) (undo-tree-id307 . -7) (undo-tree-id308 . -7) (undo-tree-id309 . -7) (undo-tree-id310 . -7) (undo-tree-id311 . -7) (undo-tree-id312 . -7) (undo-tree-id313 . -7) (undo-tree-id314 . -7) (undo-tree-id315 . -7) (undo-tree-id316 . -7) (undo-tree-id317 . -7) (undo-tree-id318 . -7) (undo-tree-id319 . -7) (undo-tree-id320 . -7) (undo-tree-id321 . -7) (undo-tree-id322 . -7) (undo-tree-id323 . -7) (undo-tree-id324 . -7) (undo-tree-id325 . -7) (undo-tree-id326 . -7) (undo-tree-id327 . -7) (undo-tree-id328 . -7) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -5) (undo-tree-id361 . -5) (undo-tree-id362 . -5) (undo-tree-id363 . -5) (undo-tree-id364 . -5) (undo-tree-id365 . -5) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6) (undo-tree-id369 . -6) (undo-tree-id370 . -6) (undo-tree-id371 . -6) (undo-tree-id372 . -7) (undo-tree-id373 . -7) (undo-tree-id374 . -7) (undo-tree-id375 . -7) (undo-tree-id376 . -7) (undo-tree-id377 . -7) (undo-tree-id378 . -8) (undo-tree-id379 . -8) (undo-tree-id380 . -8) (undo-tree-id381 . -8) (undo-tree-id382 . -8) (undo-tree-id383 . -8) (undo-tree-id384 . -9) (undo-tree-id385 . -9) (undo-tree-id386 . -9) (undo-tree-id387 . -9) (undo-tree-id388 . -9) (undo-tree-id389 . -9) (undo-tree-id390 . -10) (undo-tree-id391 . -10) (undo-tree-id392 . -10) (undo-tree-id393 . -10) (undo-tree-id394 . -10) (undo-tree-id395 . -10) (undo-tree-id396 . -10) (undo-tree-id397 . -10) (undo-tree-id398 . -11) 1419) nil (26634 56364 583071 0) 0 nil])
([nil nil ((2070 . 2071) 1274) nil (26634 56364 583007 0) 0 nil])
([nil nil ((#("R" 0 1 (fontified t)) . -1406) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (#("_" 0 1 (fontified t)) . -1407) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (#("r" 0 1 (fontified t)) . -1408) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) 1409 (t 26634 56364 587801 322000)) nil (26634 56386 604862 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . -1411) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (1406 . 1412)) nil (26634 56386 604676 0) 0 nil])
([nil nil ((apply -2 836 914 undo--wrap-and-run-primitive-undo 836 914 ((840 . 842) 864 (t 26634 56386 608483 420000)))) nil (26634 56404 695425 0) 0 nil])
([nil nil ((1711 . 1712) (#("j" 0 1 (face font-lock-string-face fontified nil)) . -1711) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (1709 . 1712) (t 26634 56404 699459 361000)) nil (26634 56452 784145 0) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-string-face fontified nil)) . -1710) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (1710 . 1711) (#("*" 0 1 (face font-lock-string-face fontified t)) . -1710) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (#("j" 0 1 (face font-lock-string-face fontified t)) . -1711) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) 1712) nil (26634 56452 784143 0) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-string-face fontified nil)) . -1608) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (1607 . 1609)) nil (26634 56452 784123 0) 0 nil])
([nil nil ((#("        
" 0 9 (fontified t)) . 1260) (undo-tree-id1286 . -8) (undo-tree-id1287 . -7) (undo-tree-id1288 . -7) (undo-tree-id1289 . -7) (undo-tree-id1290 . -7) (undo-tree-id1291 . -7) (undo-tree-id1292 . -7) (undo-tree-id1293 . -7) (undo-tree-id1294 . -7) (undo-tree-id1295 . -7) (undo-tree-id1296 . -7) (undo-tree-id1297 . -7) (undo-tree-id1298 . -7) (undo-tree-id1299 . -7) (undo-tree-id1300 . -7) (undo-tree-id1301 . -7) (undo-tree-id1302 . -9) 1267 (t 26634 56452 787066 428000)) nil (26634 56483 747150 0) 0 nil])
([nil nil ((#("        R_r = psi_r / r  # True radial wavefunction
" 0 8 (fontified t) 8 11 (face font-lock-variable-name-face fontified t) 11 12 (fontified t) 12 13 (face font-lock-operator-face fontified t) 13 20 (fontified t) 20 21 (face font-lock-operator-face fontified t) 21 25 (fontified t) 25 27 (face font-lock-comment-delimiter-face fontified t) 27 52 (face font-lock-comment-face fontified t)) . 1208) (undo-tree-id1255 . -51) (undo-tree-id1256 . -52) (undo-tree-id1257 . -52) (undo-tree-id1258 . -52) (undo-tree-id1259 . -52) (undo-tree-id1260 . -52) (undo-tree-id1261 . -52) (undo-tree-id1262 . -52) (undo-tree-id1263 . -52) (undo-tree-id1264 . -52) (undo-tree-id1265 . -52) (undo-tree-id1266 . -52) (undo-tree-id1267 . -52) (undo-tree-id1268 . -52) (undo-tree-id1269 . -52) (undo-tree-id1270 . -7) (undo-tree-id1271 . -7) (undo-tree-id1272 . -7) (undo-tree-id1273 . -7) (undo-tree-id1274 . -7) (undo-tree-id1275 . -7) (undo-tree-id1276 . -7) (undo-tree-id1277 . -7) (undo-tree-id1278 . -7) (undo-tree-id1279 . -7) (undo-tree-id1280 . -7) (undo-tree-id1281 . -7) (undo-tree-id1282 . -7) (undo-tree-id1283 . -7) (undo-tree-id1284 . -7) (undo-tree-id1285 . -52) 1215) nil (26634 56483 747140 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . -1870) (undo-tree-id1322 . -1) (1865 . 1871) (t 26634 56483 751185 521000) 1865) nil (26634 56680 78992 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -1866) (undo-tree-id1321 . -4) 1870) nil (26634 56680 78991 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2030 . 2031) (nil fontified nil 1866 . 2031) (1866 . 2031)) nil (26634 56680 78990 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . -2036) (undo-tree-id1320 . -1) (2031 . 2037) 2030) nil (26634 56680 78990 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -2032) (undo-tree-id1319 . -4) 2036) nil (26634 56680 78989 0) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-constant-face fontified nil)) . -388) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (372 . 389)) nil (26634 56680 78988 0) 0 nil])
([nil nil ((2197 . 2209)) nil (26634 56680 78986 0) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-string-face fontified nil)) . -2222) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (2210 . 2223) (2209 . 2211) (#("\"" 0 1 (face font-lock-operator-face fontified nil)) . -2209) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (2209 . 2210)) nil (26634 56680 78984 0) 0 nil])
([nil current ((#("    plt.show()
" 0 12 (fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (fontified t)) . 1866) (undo-tree-id1323 . -13) (undo-tree-id1324 . -14) (undo-tree-id1325 . -15) (undo-tree-id1326 . -13) (undo-tree-id1327 . -13) (undo-tree-id1328 . -13) (undo-tree-id1329 . -13) (undo-tree-id1330 . -13) (undo-tree-id1331 . -13) (undo-tree-id1332 . -13) (undo-tree-id1333 . -13) (undo-tree-id1334 . -13) (undo-tree-id1335 . -13) (undo-tree-id1336 . -13) (undo-tree-id1337 . -13) (undo-tree-id1338 . -13) (undo-tree-id1339 . -13) (undo-tree-id1340 . -13) (undo-tree-id1341 . -13) (undo-tree-id1342 . -13) (undo-tree-id1343 . -13) (undo-tree-id1344 . -13) (undo-tree-id1345 . -13) (undo-tree-id1346 . -13) (undo-tree-id1347 . -13) (undo-tree-id1348 . -13) (undo-tree-id1349 . -13) (undo-tree-id1350 . -13) (undo-tree-id1351 . -13) (undo-tree-id1352 . -13) (undo-tree-id1353 . -13) (undo-tree-id1354 . -13) (undo-tree-id1355 . -13) (undo-tree-id1356 . -13) (undo-tree-id1357 . -13) (undo-tree-id1358 . -13) (undo-tree-id1359 . -15) 1879 (t 26634 56680 82876 583000)) nil (26634 56692 498239 0) 0 nil])
nil
